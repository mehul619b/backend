{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","inputFile","setinputFile","receivedFileName","setreceivedFileName","postFile","e","a","preventDefault","data","FormData","append","axios","post","res","className","onSubmit","type","onChange","target","files","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA6BeA,MAzBf,WAAgB,IAAD,EACkBC,mBAAS,MAD3B,mBACNC,EADM,KACIC,EADJ,OAEgCF,mBAAS,IAFzC,mBAENG,EAFM,KAEWC,EAFX,KAGPC,EAAQ,uCAAC,WAAOC,GAAP,iBAAAC,EAAA,6DACbD,EAAEE,kBACIC,EAAK,IAAIC,UACVC,OAAO,OAAOV,GAHN,SAKGW,IAAMC,KAAK,iBAAiBJ,GAL/B,OAKPK,EALO,OAMbV,EAAoBU,EAAIL,MANX,2CAAD,sDAQb,OACC,qBAAKM,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACA,uBAAMC,SAAUX,EAAhB,UACI,uBAAOY,KAAK,OAAOC,SAAU,SAACZ,GAAD,OAAMJ,EAAaI,EAAEa,OAAOC,MAAM,OAC/D,wBAAQH,KAAK,SAAb,uBAEF,uBACA,+CAAkBd,WCXXkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc8851d8.chunk.js","sourcesContent":["import './App.css';\nimport React,{useState} from 'react';\nimport axios from 'axios'\n\nfunction App() {\n  const [inputFile,setinputFile]=useState(null);\n  const [receivedFileName,setreceivedFileName]=useState(\"\");\n  const postFile=async (e)=>{\n    e.preventDefault()\n    const data=new FormData();\n    data.append('file',inputFile);\n    \n    const res=await axios.post('/get_file_name',data);\n    setreceivedFileName(res.data);\n  }\n   return (\n    <div className=\"App\">\n      <div className=\"container\">\n      <form onSubmit={postFile}>\n          <input type=\"file\" onChange={(e)=>(setinputFile(e.target.files[0]))}/>\n          <button type=\"submit\">Submit</button>\n        </form>\n        <br/>\n        <label>FILENAME: {receivedFileName}</label>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}